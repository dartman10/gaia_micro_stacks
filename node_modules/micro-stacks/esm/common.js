function z(){if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw new Error("Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available")}function W(t){if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Non array buffer passed to arrayBufferToUint8")}function J(t,e,r){return r?`Use of '${r}' requires \`${e}\` which is unavailable on the '${t}' object within the currently executing environment.`:`\`${e}\` is unavailable on the '${t}' object within the currently executing environment.`}function j(t,{throwIfUnavailable:e,usageDesc:r,returnEmptyObject:n}={}){let i;try{if(i=z(),i){const o=i[t];if(o)return o}}catch(o){console.error(`Error getting object '${t}' from global scope '${i}': ${o}`)}if(e){const o=J(i,t.toString(),r);throw console.error(o),new Error(o)}if(n)return{}}function L(t){const e=t.reduce((i,o)=>i+o.length,0),r=new Uint8Array(e);let n=0;for(let i=0;i<t.length;i++)r.set(t[i],n),n+=t[i].length;return r}function q(t){return typeof t=="object"&&(t=Uint8Array.from(t)),t}const Y=26;function Z(t){return t!==null&&typeof t=="object"&&t?.constructor?.wordSize===Y&&Array.isArray(t?.words)}function K(t){return new TextEncoder().encode(t)}function O(t){return new TextDecoder().decode(t)}const b=new Array(255);for(let t=0;t<=255;++t)b[t]=t.toString(16).padStart(2,"0");function d(t){if(typeof t!="string")throw new TypeError("hexToBytes: expected string, got "+typeof t);if(t.length%2)throw new Error(`hexToBytes: received invalid unpadded hex, got: ${t.length}`);const e=new Uint8Array(t.length/2);for(let r=0;r<e.length;r++){const n=r*2;e[r]=Number.parseInt(t.slice(n,n+2),16)}return e}function l(t){const e=new Array(t.length);for(let r=0;r<t.length;++r)e[r]=b[t[r]];return e.join("")}function Q(t){const e=t.toString(16);return e.length&1?`0${e}`:e}function y(t){if(typeof t!="string")throw new TypeError("hexToNumber: expected string, got "+typeof t);return BigInt(`0x${t}`)}const w=(t,e=8)=>(typeof t=="bigint"?t:E(t,!1)).toString(16).padStart(e*2,"0"),X=t=>parseInt(t,16),tt=t=>JSON.parse(O(d(t))),et=t=>typeof t=="string"?d(t):t,rt=t=>t.startsWith("0x")?t.replace("0x",""):t,x=BigInt(0),h=BigInt(1);function nt(t,e=128){if(t<-(h<<BigInt(e)-h)||t>(h<<BigInt(e)-h)-h)throw`Integer out of range given ${e} bits to represent.`;return t>=x?t:~(-t-h|~((h<<BigInt(e))-h))}function D(t,e=128){return(t&h<<BigInt(e)-h)>x&&(t=t-(h<<BigInt(e))),t}function it(t,e=!1,r=8){return d(w(E(t,e),r))}function ot(t,e=!1,r=8){return w(E(t,e),r)}function E(t,e=!1){if(typeof t=="number"){if(!Number.isInteger(t))throw new RangeError("Invalid value. Values of type 'number' must be an integer.");return BigInt(t)}if(typeof t=="string")if(t.toLowerCase().startsWith("0x")){let r=t.slice(2);r=r.padStart(r.length+r.length%2,"0"),t=d(r)}else try{return BigInt(t)}catch(r){if(r instanceof SyntaxError)throw new RangeError(`Invalid value. String integer '${t}' is not finite.`)}if(typeof t=="bigint")return t;if(t instanceof Uint8Array)return e?D(y(l(t))):y(l(t));if(Z(t))return BigInt(t.toString());throw new TypeError(`Invalid value type. Must be a number, bigint, integer-string, hex-string, BN.js instance, or Buffer, got: ${typeof t}.`)}const st=t=>y(l(t));function f(t){return`[micro-stacks] ${t}`}class ct extends Error{constructor(e){super(e);this.message=f(e),this.name=this.constructor.name,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class at extends Error{constructor(e){super(e);this.message=f(e),this.name=this.constructor.name,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class ut extends Error{constructor(e){super(e);this.message=f(e),this.name=this.constructor.name,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class ht extends Error{constructor(e){super(e);this.message=f(e),this.name=this.constructor.name,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class ft extends Error{constructor(e){super(e);this.message=f(e),this.name=this.constructor.name,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class lt extends Error{constructor(e){super(e);this.message=f(e),this.name=this.constructor.name,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class dt extends Error{constructor(e){super(e);this.message=f(e),this.name=this.constructor.name}}class gt extends Error{constructor(e){super(e);this.message=f(e),this.name=this.constructor.name}}function I(t){switch(typeof t){case"string":case"number":case"bigint":case"boolean":case"undefined":case"symbol":case"function":return t}if(t===null)return t;if(ArrayBuffer.isView(t))return t.slice();if(t instanceof Date)return new Date(t);if(t instanceof Array)return t.reduce((e,r,n)=>(e[n]=I(r),e),[]);if(t instanceof Object)return Object.keys(t).reduce((e,r)=>(e[r]=I(t[r]),e),Object.create(Object.getPrototypeOf(t),Object.getOwnPropertyDescriptors(t)))}function v(t){return I(t)}function pt(t,e){const r=v(t);return delete r[e],r}const yt=typeof window!="undefined",Et=yt?{referrer:"no-referrer",referrerPolicy:"no-referrer"}:{};async function wt(t,e={}){return fetch(t,{...Et,...e})}const C="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",V="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";function k(t){const e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");let r=t.indexOf("=");r===-1&&(r=e);const n=r===e?0:4-r%4;return[r,n]}function It(t){const e=k(t),r=e[0],n=e[1];return(r+n)*3/4-n}function Bt(t,e,r){return(e+r)*3/4-r}function B(t,e){const{revLookup:r}=A(e);let n;const i=k(t),o=i[0],s=i[1],u=new Uint8Array(Bt(t,o,s));let c=0;const p=s>0?o-4:o;let a;for(a=0;a<p;a+=4)n=r[t.charCodeAt(a)]<<18|r[t.charCodeAt(a+1)]<<12|r[t.charCodeAt(a+2)]<<6|r[t.charCodeAt(a+3)],u[c++]=n>>16&255,u[c++]=n>>8&255,u[c++]=n&255;return s===2&&(n=r[t.charCodeAt(a)]<<2|r[t.charCodeAt(a+1)]>>4,u[c++]=n&255),s===1&&(n=r[t.charCodeAt(a)]<<10|r[t.charCodeAt(a+1)]<<4|r[t.charCodeAt(a+2)]>>2,u[c++]=n>>8&255,u[c++]=n&255),u}function R(t){const e=4,r=t.length,n=r%e;if(!n)return t;const i=e-n,o=r+i;return t.padEnd(o,"=")}function mt(t){return B(R(t),C)}function At(t){return B(R(t),V)}function Tt(t,e){const{lookup:r}=A(e);return r[t>>18&63]+r[t>>12&63]+r[t>>6&63]+r[t&63]}function _t(t,e,r,n){let i;const o=[];for(let s=e;s<r;s+=3)i=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(t[s+2]&255),o.push(Tt(i,n));return o.join("")}const m=new Map;function A(t){if(m.has(t))return m.get(t);const e=[],r=[];for(let n=0,i=t.length;n<i;++n)e[n]=t[n],r[t.charCodeAt(n)]=n;return r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63,m.set(t,{lookup:e,revLookup:r}),{lookup:e,revLookup:r}}function T(t,e){const{lookup:r}=A(e);let n;const i=t.length,o=i%3,s=[],u=16383;for(let c=0,p=i-o;c<p;c+=u)s.push(_t(t,c,c+u>p?p:c+u,e));return o===1?(n=t[i-1],s.push(r[n>>2]+r[n<<4&63]+"==")):o===2&&(n=(t[i-2]<<8)+t[i-1],s.push(r[n>>10]+r[n>>4&63]+r[n<<2&63]+"=")),s.join("")}function Nt(t){return T(t,C)}function Ut(t){return T(t,V)}/*! micro-base58 - MIT License (c) 2021, Paul Miller (https://paulmillr.com) */const _="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",F=BigInt(58);function St(t){if(t.length===0)return"";typeof t=="string"&&(typeof TextEncoder!="undefined"?t=new TextEncoder().encode(t):t=new Uint8Array(t.split("").map(n=>n.charCodeAt(0))));let e=BigInt("0x"+l(t));const r=[];for(;e>0;){const n=Number(e%F);e=e/F,r.push(_[n])}for(let n=0;t[n]===0;n++)r.push(_[0]);return r.reverse().join("")}function Lt(t){if(t.length===0)return new Uint8Array([]);const e=[0];for(let r=0;r<t.length;r++){const n=t[r],i=_.indexOf(n);if(i===void 0)throw new Error(`base58.decode received invalid input. Character '${n}' is not in the base58 alphabet.`);for(let s=0;s<e.length;s++)e[s]*=58;e[0]+=i;let o=0;for(let s=0;s<e.length;s++)e[s]+=o,o=e[s]>>8,e[s]&=255;for(;o>0;)e.push(o&255),o>>=8}for(let r=0;r<t.length&&t[r]==="1";r++)e.push(0);return new Uint8Array(e.reverse())}function Ot(t){const e=[];for(let r=0;r<t.length;++r)e.push(t.charCodeAt(r)&255);return new Uint8Array(e)}function bt(t){let e="";const r=t.length;for(let n=0;n<r;++n)e+=String.fromCharCode(t[n]&127);return e}function xt(t,e,r,n,i){if(n||(n=0),!i&&i!==0&&(i=t.length),r>=e.length&&(r=e.length),r||(r=0),i>0&&i<n&&(i=n),i===n||e.length===0||t.length===0)return 0;if(r<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=t.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("sourceEnd out of bounds");i>t.length&&(i=t.length),e.length-r<i-n&&(i=e.length-r+n);const o=i-n;return t===e&&typeof Uint8Array.prototype.copyWithin=="function"?t.copyWithin(r,n,i):Uint8Array.prototype.set.call(e,t.subarray(n,i),r),o}class Dt{constructor(){this._value=[]}get value(){return this._value}appendHexString(e){this.value.push(d(e))}push(e){return this._value.push(e)}appendByte(e){if(!Number.isInteger(e)||e<0||e>255)throw new Error(`Value ${e} is not a valid byte`);this.value.push(Uint8Array.from([e]))}concatBuffer(){return L(this.value)}}const g={INVALID_ENCODING:"Invalid encoding provided. Please specify a valid encoding the internal Node.js Buffer supports.",INVALID_SMARTBUFFER_SIZE:"Invalid size provided. Size must be a valid integer greater than zero.",INVALID_SMARTBUFFER_BUFFER:"Invalid Buffer provided in SmartBufferOptions.",INVALID_SMARTBUFFER_OBJECT:"Invalid SmartBufferOptions object supplied to SmartBuffer constructor or factory methods.",INVALID_OFFSET:"An invalid offset value was provided.",INVALID_OFFSET_NON_NUMBER:"An invalid offset value was provided. A numeric value is required.",INVALID_LENGTH:"An invalid length value was provided.",INVALID_LENGTH_NON_NUMBER:"An invalid length value was provived. A numeric value is required.",INVALID_TARGET_OFFSET:"Target offset is beyond the bounds of the internal SmartBuffer data.",INVALID_TARGET_LENGTH:"Specified length value moves cursor beyong the bounds of the internal SmartBuffer data.",INVALID_READ_BEYOND_BOUNDS:"Attempted to read beyond the bounds of the managed data.",INVALID_WRITE_BEYOND_BOUNDS:"Attempted to write beyond the bounds of the managed data."};function vt(t,e,r){return e=+e,r=r>>>0,t[r]=e&255,r+1}function Ct(t,e,r){return e=+e,r=r>>>0,t[r]=e>>>8,t[r+1]=e&255,r+2}function Vt(t,e){return e=e>>>0,t[e]}function kt(t,e){return e>>>=0,t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24}function Rt(t,e){return e=e>>>0,t[e]*16777216+(t[e+1]<<16|t[e+2]<<8|t[e+3])}function Ft(t,e,r){return e=+e,r>>>=0,t[r+3]=e>>>24,t[r+2]=e>>>16,t[r+1]=e>>>8,t[r]=e&255,r+4}function Mt(t,e,r){return e=+e,r>>>=0,t[r]=e&255,t[r+1]=e>>>8,t[r+2]=e>>>16,t[r+3]=e>>>24,r+4}function Ht(t,e,r){return e=+e,r>>>=0,t[r]=e>>>24,t[r+1]=e>>>16,t[r+2]=e>>>8,t[r+3]=e&255,r+4}function M(t,e){return t instanceof e||t!=null&&t.constructor!=null&&t.constructor.name!=null&&t.constructor.name===e.name}function $t(t,e){if(!M(t,Uint8Array)||!M(e,Uint8Array))throw new TypeError('The "buf1", "buf2" arguments must be one of type Uint8Array');if(t===e)return 0;let r=t.length,n=e.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0}function Gt(t,e){const r=typeof e=="number"?e:t.length,n=Math.min(t.length,t.byteOffset+r);return t.slice(t.byteOffset,n)}function Pt(t){const e=Object.values(t).filter(n=>typeof n=="number"),r=new Set(e);return n=>r.has(n)}const H=new Map;function N(t,e){const r=H.get(t);if(r!==void 0)return r(e);const n=Pt(t);return H.set(t,n),N(t,e)}function $(t){return typeof t=="number"&&isFinite(t)&&Math.floor(t)===t}function G(t){return typeof t=="number"&&isFinite(t)&&$(t)}function P(t,e){if(typeof t=="number"){if(!G(t)||t<0)throw new Error(e?g.INVALID_OFFSET:g.INVALID_LENGTH)}else throw new Error(e?g.INVALID_OFFSET_NON_NUMBER:g.INVALID_LENGTH_NON_NUMBER)}class zt{constructor(e){if(this._readOffset=0,e)this.buffer=e,this.view=new DataView(e.buffer,e.byteOffset,e.byteLength);else{const r=new Uint8Array;this.buffer=r,this.view=new DataView(r.buffer,r.byteOffset,r.byteLength)}}ensureReadable(e,r){let n=this._readOffset;if(typeof r!="undefined"&&(P(r,!0),n=r),n<0||n+e>this.buffer.length)throw new Error(g.INVALID_READ_BEYOND_BOUNDS)}_readNumberValue(e,r,n){this.ensureReadable(r,n);const i=e.call(this.view,typeof n=="number"?n:this._readOffset);return typeof n=="undefined"&&(this._readOffset+=r),i}readBuffer(e){const r=typeof e=="number"?e:this.buffer.length,n=Math.min(this.buffer.length,this._readOffset+r),i=this.buffer.slice(this.buffer.byteOffset+this._readOffset,n);return this._readOffset=n,i}readUInt32BE(e){return this._readNumberValue(this.view.getUint32,4,e)}readUInt8(e){return this._readNumberValue(this.view.getUint8,1,e)}readUInt16BE(e){return this._readNumberValue(this.view.getUint16,2,e)}readBigUIntLE(e){const r=Uint8Array.from(this.readBuffer(e)).reverse(),n=l(r);return BigInt(`0x${n}`)}readBigUIntBE(e){const r=this.readBuffer(e),n=l(r);return BigInt(`0x${n}`)}readBigUInt64BE(e){if(typeof BigInt=="undefined")throw new Error("Platform does not support JS BigInt type.");return this._readNumberValue(this.view.getBigUint64,8,e)}get readOffset(){return this._readOffset}set readOffset(e){this._readOffset=e}get internalBuffer(){return this.buffer.buffer}readUInt8Enum(e,r){const n=this.readUInt8();if(N(e,n))return n;throw r(n)}}var U;(function(t){t[t.Testnet=2147483648]="Testnet",t[t.Mainnet=1]="Mainnet"})(U||(U={}));const Wt=1;var S;(function(t){t[t.Mainnet=0]="Mainnet",t[t.Testnet=128]="Testnet"})(S||(S={}));export{Dt as BufferArray,zt as BufferReader,U as ChainID,Wt as DEFAULT_CHAIN_ID,ut as DeserializationError,g as ERRORS,gt as InvalidTokenError,dt as MissingParametersError,ht as NotImplementedError,at as SerializationError,ft as SigningError,ct as StacksTransactionError,S as TransactionVersion,lt as VerificationError,W as arrayBufferToUint8,Ot as asciiToBytes,mt as base64ToBytes,B as base64ToBytesBase,At as base64UrlToBytes,It as byteLength,bt as bytesToAscii,Nt as bytesToBase64,T as bytesToBase64Base,Ut as bytesToBase64Url,st as bytesToBigInt,l as bytesToHex,O as bytesToUtf8,P as checkOffsetOrLengthValue,rt as cleanHex,v as cloneDeep,$t as compare,L as concatByteArrays,xt as copy,Lt as decodeB58,St as encodeB58,et as ensureHexBytes,q as ensureUint8Array,wt as fetchPrivate,D as fromTwos,j as getGlobalObject,X as hexStringToInt,y as hexToBigInt,d as hexToBytes,tt as hexToJSON,E as intToBigInt,it as intToBytes,ot as intToHex,w as intToHexString,N as isEnum,G as isFiniteInteger,$ as isInteger,Q as numberToHex,pt as omit,Gt as readBuffer,kt as readInt32LE,Rt as readUInt32BE,Vt as readUInt8,nt as toTwos,K as utf8ToBytes,Mt as writeInt32LE,Ct as writeUInt16BE,Ht as writeUInt32BE,Ft as writeUInt32LE,vt as writeUInt8};
