import{utf8ToBytes as a,intToBigInt as J,intToBytes as Ot,bytesToHex as f,hexToBytes as m,BufferArray as b,intToHexString as A,hexStringToInt as M,bytesToUtf8 as v,bytesToAscii as tt,asciiToBytes as et,concatByteArrays as P,toTwos as Ct,writeUInt32BE as Pt,compare as Vt,BufferReader as nt,DeserializationError as V}from"micro-stacks/common";import{c32addressDecode as Lt,c32address as It}from"micro-stacks/crypto";const rt=128,L=128,I=BigInt("0xffffffffffffffffffffffffffffffff"),ot=BigInt(0),y=BigInt("0x7fffffffffffffffffffffffffffffff"),x=BigInt("-170141183460469231731687303715884105728"),yt=32,xt=65,Rt=32,$t=64,Nt=34;var R;(function(t){t[t.Origin=1]="Origin",t[t.Standard=2]="Standard",t[t.Contract=3]="Contract"})(R||(R={}));var n;(function(t){t[t.Int=0]="Int",t[t.UInt=1]="UInt",t[t.Buffer=2]="Buffer",t[t.BoolTrue=3]="BoolTrue",t[t.BoolFalse=4]="BoolFalse",t[t.PrincipalStandard=5]="PrincipalStandard",t[t.PrincipalContract=6]="PrincipalContract",t[t.ResponseOk=7]="ResponseOk",t[t.ResponseErr=8]="ResponseErr",t[t.OptionalNone=9]="OptionalNone",t[t.OptionalSome=10]="OptionalSome",t[t.List=11]="List",t[t.Tuple=12]="Tuple",t[t.StringASCII=13]="StringASCII",t[t.StringUTF8=14]="StringUTF8"})(n||(n={}));const $=()=>({type:n.BoolTrue}),N=()=>({type:n.BoolFalse}),Tt=t=>t?$():N(),T=t=>{if(t.length>1e6)throw new Error("Cannot construct clarity buffer that is greater than 1MB");return{type:n.Buffer,buffer:Uint8Array.from(t)}},_t=t=>T(a(t)),st=t=>{const e=J(t,!0);if(e>y)throw new RangeError(`Cannot construct clarity integer from value greater than ${y.toString()}`);if(e<x)throw new RangeError(`Cannot construct clarity integer form value less than ${x.toString()}`);if(Ot(e).byteLength>L)throw new RangeError(`Cannot construct clarity integer from value greater than ${L} bits`);return{type:n.Int,value:e}},it=t=>{const e=J(t);if(e<ot)throw new RangeError("Cannot construct unsigned clarity integer from negative value");if(e>I)throw new RangeError(`Cannot construct unsigned clarity integer greater than ${I.toString()}`);return{type:n.UInt,value:e}};function ct(t){return{type:n.List,list:t}}function _(){return{type:n.OptionalNone}}function F(t){return{type:n.OptionalSome,value:t}}function Ft(t){return t?F(t):_()}function ut(t){return/^[a-zA-Z]([a-zA-Z0-9]|[-_!?+<>=/*])*$|^[-+=/*]$|^[<>]=?$/.test(t)&&t.length<128}var z;(function(t){t[t.Address=0]="Address",t[t.Principal=1]="Principal",t[t.LengthPrefixedString=2]="LengthPrefixedString",t[t.MemoString=3]="MemoString",t[t.AssetInfo=4]="AssetInfo",t[t.PostCondition=5]="PostCondition",t[t.PublicKey=6]="PublicKey",t[t.LengthPrefixedList=7]="LengthPrefixedList",t[t.Payload=8]="Payload",t[t.MessageSignature=9]="MessageSignature",t[t.TransactionAuthField=10]="TransactionAuthField"})(z||(z={}));function H(t){const e=Lt(t);return{type:0,version:e[0],hash160:f(e[1])}}function j(t){return It(t.version,m(t.hash160))}const at=(t,e)=>t?a(t).length>e:!1;function E(t,e,r){const o=e||1,s=r||rt;if(at(t,s))throw new Error(`String length exceeds maximum bytes ${s.toString()}`);return{type:2,content:t,lengthPrefixBytes:o,maxLengthBytes:s}}function Y(t){const e=new b;return e.appendHexString(A(t.version,1)),e.appendHexString(t.hash160),e.concatBuffer()}function G(t){const e=new b,r=a(t.content),o=r.byteLength;return e.appendHexString(A(o,t.lengthPrefixBytes)),e.push(r),e.concatBuffer()}function D(t,e,r){e=e||1;const o=M(f(t.readBuffer(e))),s=v(t.readBuffer(o));return E(s,e,r??128)}function K(t){const e=M(f(t.readBuffer(1))),r=f(t.readBuffer(20));return{type:0,version:e,hash160:r}}function O(t){if(t.type===n.PrincipalStandard)return j(t.address);if(t.type===n.PrincipalContract)return`${j(t.address)}.${t.contractName.content}`;throw new Error(`Unexpected principal data: ${JSON.stringify(t)}`)}function zt(t){if(t.includes(".")){const[e,r]=t.split(".");return dt(e,r)}else return ft(t)}function ft(t){const e=H(t);return{type:n.PrincipalStandard,address:e}}function lt(t){return{type:n.PrincipalStandard,address:t}}function pt(t,e){const r=H(t),o=E(e);return X(r,o)}function dt(t,e){if(t.includes(".")){const[r,o]=t.split(".");return pt(r,o)}if(!e)throw TypeError("[micro-stacks] contractPrincipalCV requires contractName value");return pt(t,e)}function X(t,e){if(a(e.content).byteLength>=128)throw new Error("Contract name must be less than 128 bytes");return{type:n.PrincipalContract,address:t,contractName:e}}function Ht(t,e){const r=E(e);return{type:n.PrincipalContract,address:t.address,contractName:r}}function gt(t){return{type:n.ResponseErr,value:t}}function ht(t){return{type:n.ResponseOk,value:t}}const C=t=>({type:n.StringASCII,data:t}),St=t=>({type:n.StringUTF8,data:t}),jt=(t,e)=>{switch(e){case"ascii":return C(t);case"utf8":return C(t)}};function Bt(t){for(const e in t)if(!ut(e))throw new Error(`"${e}" is not a valid Clarity name`);return{type:n.Tuple,data:t}}var Z;(function(t){t[t.ClarityAbiTypeUInt128=1]="ClarityAbiTypeUInt128",t[t.ClarityAbiTypeInt128=2]="ClarityAbiTypeInt128",t[t.ClarityAbiTypeBool=3]="ClarityAbiTypeBool",t[t.ClarityAbiTypePrincipal=4]="ClarityAbiTypePrincipal",t[t.ClarityAbiTypeNone=5]="ClarityAbiTypeNone",t[t.ClarityAbiTypeBuffer=6]="ClarityAbiTypeBuffer",t[t.ClarityAbiTypeResponse=7]="ClarityAbiTypeResponse",t[t.ClarityAbiTypeOptional=8]="ClarityAbiTypeOptional",t[t.ClarityAbiTypeTuple=9]="ClarityAbiTypeTuple",t[t.ClarityAbiTypeList=10]="ClarityAbiTypeList",t[t.ClarityAbiTypeStringAscii=11]="ClarityAbiTypeStringAscii",t[t.ClarityAbiTypeStringUtf8=12]="ClarityAbiTypeStringUtf8",t[t.ClarityAbiTypeTraitReference=13]="ClarityAbiTypeTraitReference"})(Z||(Z={}));function g(t,e="hex"){switch(t.type){case n.BoolTrue:return"true";case n.BoolFalse:return"false";case n.Int:return t.value.toString();case n.UInt:return`u${t.value.toString()}`;case n.Buffer:if(e==="tryAscii"){const r=tt(t.buffer);if(/[ -~]/.test(r))return JSON.stringify(r)}return`0x${f(t.buffer)}`;case n.OptionalNone:return"none";case n.OptionalSome:return`(some ${g(t.value,e)})`;case n.ResponseErr:return`(err ${g(t.value,e)})`;case n.ResponseOk:return`(ok ${g(t.value,e)})`;case n.PrincipalStandard:case n.PrincipalContract:return O(t);case n.List:return`(list ${t.list.map(r=>g(r,e)).join(" ")})`;case n.Tuple:return`(tuple ${Object.keys(t.data).map(r=>`(${r} ${g(t.data[r],e)})`).join(" ")})`;case n.StringASCII:return`"${t.data}"`;case n.StringUTF8:return`u"${t.data}"`}}function u(t){switch(t.type){case n.BoolTrue:case n.BoolFalse:return"bool";case n.Int:return"int";case n.UInt:return"uint";case n.Buffer:return`(buff ${t.buffer.length})`;case n.OptionalNone:return"(optional none)";case n.OptionalSome:return`(optional ${u(t.value)})`;case n.ResponseErr:return`(response UnknownType ${u(t.value)})`;case n.ResponseOk:return`(response ${u(t.value)} UnknownType)`;case n.PrincipalStandard:case n.PrincipalContract:return"principal";case n.List:return`(list ${t.list.length} ${t.list.length?u(t.list[0]):"UnknownType"})`;case n.Tuple:return`(tuple ${Object.keys(t.data).map(e=>`(${e} ${u(t.data[e])})`).join(" ")})`;case n.StringASCII:return`(string-ascii ${et(t.data).length})`;case n.StringUTF8:return`(string-utf8 ${a(t.data).length})`}}function h(t){const e=k(t,!0);switch(t.type){case n.ResponseErr:return{type:u(t),value:e,success:!1};case n.ResponseOk:return{type:u(t),value:e,success:!0};default:return{type:u(t),value:e}}}function k(t,e=!1){switch(t.type){case n.BoolTrue:return!0;case n.BoolFalse:return!1;case n.Int:case n.UInt:return e?t.value.toString():t.value;case n.Buffer:return`0x${f(t.buffer)}`;case n.OptionalNone:return null;case n.OptionalSome:return h(t.value);case n.ResponseErr:return h(t.value);case n.ResponseOk:return h(t.value);case n.PrincipalStandard:case n.PrincipalContract:return O(t);case n.List:return t.list.map(s=>h(s));case n.Tuple:const r={};return Object.keys(t.data).map(s=>[s,h(t.data[s])]).forEach(([s,i])=>{r[s]=i}),r;case n.StringASCII:return t.data;case n.StringUTF8:return t.data}}function l(t,e=!1){switch(t.type){case n.BoolTrue:return!0;case n.BoolFalse:return!1;case n.Int:case n.UInt:return e?t.value.toString():t.value;case n.Buffer:return t.buffer;case n.OptionalNone:return null;case n.OptionalSome:return l(t.value,e);case n.ResponseErr:return l(t.value,e);case n.ResponseOk:return l(t.value,e);case n.PrincipalStandard:case n.PrincipalContract:return O(t);case n.List:return t.list.map(o=>l(o,e));case n.Tuple:const r={};return Object.keys(t.data).forEach(o=>{r[o]=l(t.data[o],e)}),r;case n.StringASCII:return t.data;case n.StringUTF8:return t.data}}function c(t,e){const r=new b,o=Uint8Array.from([t]);return r.push(o),r.push(e),r.concatBuffer()}function Yt(t){return Uint8Array.from([t.type])}function Gt(t){return t.type===n.OptionalNone?new Uint8Array([t.type]):c(t.type,S(t.value))}function Dt(t){const e=new Uint8Array(4);return new DataView(e.buffer,e.byteOffset,e.byteLength).setUint32(e.byteOffset,t.buffer.length),c(t.type,P([e,Uint8Array.from(t.buffer)]))}function Kt(t){const e=A(Ct(t.value),16),r=m(e);return c(t.type,r)}function Xt(t){const e=A(t.value,16),r=m(e);return c(t.type,r)}function Zt(t){return c(t.type,Y(t.address))}function kt(t){return c(t.type,P([Y(t.address),G(t.contractName)]))}function Wt(t){return c(t.type,S(t.value))}function qt(t){const e=new b,r=new Uint8Array(4);Pt(r,t.list.length,0),e.push(r);for(const o of t.list){const s=S(o);e.push(s)}return c(t.type,e.concatBuffer())}function Qt(t){const e=[],r=new Uint8Array(4);new DataView(r.buffer,r.byteOffset,r.byteLength).setUint32(r.byteOffset,Object.keys(t.data).length),e.push(r);const s=Object.keys(t.data).sort((i,d)=>{const B=a(i),U=a(d);return Vt(B,U)});for(const i of s){const d=E(i);e.push(G(d));const B=S(t.data[i]);e.push(B)}return c(t.type,P(e))}function wt(t,e){const r=new b,s=(e==="ascii"?et:a)(t.data),i=new Uint8Array(4);return new DataView(i.buffer,i.byteOffset,i.byteLength).setUint32(i.byteOffset,s.length),r.push(i),r.push(s),c(t.type,r.concatBuffer())}function Jt(t){return wt(t,"ascii")}function Mt(t){return wt(t,"utf8")}function S(t){switch(t.type){case n.BoolTrue:case n.BoolFalse:return Yt(t);case n.OptionalNone:case n.OptionalSome:return Gt(t);case n.Buffer:return Dt(t);case n.Int:return Kt(t);case n.UInt:return Xt(t);case n.PrincipalStandard:return Zt(t);case n.PrincipalContract:return kt(t);case n.ResponseOk:case n.ResponseErr:return Wt(t);case n.List:return qt(t);case n.Tuple:return Qt(t);case n.StringASCII:return Jt(t);case n.StringUTF8:return Mt(t);default:throw new Error("Unable to serialize. Invalid Clarity Value.")}}function p(t){let e;if(typeof t=="string"){const o=t.slice(0,2).toLowerCase()==="0x";e=new nt(m(o?t.slice(2):t))}else t instanceof Uint8Array?e=new nt(t):e=t;switch(e.readUInt8Enum(n,o=>{throw new V(`Cannot recognize Clarity Type: ${o}`)})){case n.Int:return st(e.readBuffer(16));case n.UInt:return it(e.readBuffer(16));case n.Buffer:const o=e.readUInt32BE();return T(e.readBuffer(o));case n.BoolTrue:return $();case n.BoolFalse:return N();case n.PrincipalStandard:const s=K(e);return lt(s);case n.PrincipalContract:const i=K(e),d=D(e);return X(i,d);case n.ResponseOk:return ht(p(e));case n.ResponseErr:return gt(p(e));case n.OptionalNone:return _();case n.OptionalSome:return F(p(e));case n.List:const B=e.readUInt32BE(),U=[];for(let w=0;w<B;w++)U.push(p(e));return ct(U);case n.Tuple:const bt=e.readUInt32BE(),q={};for(let w=0;w<bt;w++){const Q=D(e).content;if(Q===void 0)throw new V('"content" is undefined');q[Q]=p(e)}return Bt(q);case n.StringASCII:const Et=e.readUInt32BE(),Ut=tt(e.readBuffer(Et));return C(Ut);case n.StringUTF8:const mt=e.readUInt32BE(),At=v(e.readBuffer(mt));return St(At);default:throw new V("Unable to deserialize Clarity Value from buffer. Could not find valid Clarity Type.")}}function vt(t){return`0x${f(S(t))}`}function W(t){return p(t)}function te(t,e=!0){return k(W(t),e)}function ee(t,e=!0){return l(W(t),e)}export{L as CLARITY_INT_SIZE,yt as COINBASE_BUFFER_LENGTH_BYTES,Rt as COMPRESSED_PUBKEY_LENGTH_BYTES,Z as ClarityAbiTypeId,n as ClarityType,y as MAX_I128,rt as MAX_STRING_LENGTH_BYTES,I as MAX_U128,Nt as MEMO_MAX_LENGTH_BYTES,x as MIN_I128,ot as MIN_U128,R as PostConditionPrincipalID,xt as RECOVERABLE_ECDSA_SIG_LENGTH_BYTES,z as StacksMessageType,$t as UNCOMPRESSED_PUBKEY_LENGTH_BYTES,j as addressToString,Tt as boolCV,T as bufferCV,_t as bufferCVFromString,dt as contractPrincipalCV,X as contractPrincipalCVFromAddress,Ht as contractPrincipalCVFromStandard,H as createAddress,E as createLPString,vt as cvToHex,h as cvToJSON,g as cvToString,l as cvToTrueValue,k as cvToValue,K as deserializeAddress,p as deserializeCV,D as deserializeLPString,at as exceedsMaxLengthBytes,N as falseCV,u as getCVTypeString,W as hexToCV,te as hexToCvValue,ee as hexToValue,st as intCV,ut as isClarityName,ct as listCV,_ as noneCV,Ft as optionalCVOf,zt as principalCV,O as principalToString,gt as responseErrorCV,ht as responseOkCV,Y as serializeAddress,S as serializeCV,G as serializeLPString,F as someCV,ft as standardPrincipalCV,lt as standardPrincipalCVFromAddress,C as stringAsciiCV,jt as stringCV,St as stringUtf8CV,$ as trueCV,Bt as tupleCV,it as uintCV};
