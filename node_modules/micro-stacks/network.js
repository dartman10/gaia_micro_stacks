"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var common=require("micro-stacks/common");const HIRO_MAINNET_DEFAULT="https://stacks-node-api.mainnet.stacks.co",HIRO_TESTNET_DEFAULT="https://stacks-node-api.testnet.stacks.co",HIRO_MOCKNET_DEFAULT="http://localhost:3999";class StacksMainnet{constructor(e={url:HIRO_MAINNET_DEFAULT}){if(this.version=common.TransactionVersion.Mainnet,this.chainId=common.ChainID.Mainnet,this.broadcastEndpoint="/v2/transactions",this.transferFeeEstimateEndpoint="/v2/fees/transfer",this.accountEndpoint="/v2/accounts",this.contractAbiEndpoint="/v2/contracts/interface",this.readOnlyFunctionCallEndpoint="/v2/contracts/call-read",this.getCoreApiUrl=()=>this._coreApiUrl,this.isMainnet=()=>this.version===common.TransactionVersion.Mainnet,this.getBroadcastApiUrl=()=>`${this.getCoreApiUrl()}${this.broadcastEndpoint}`,this.getTransferFeeEstimateApiUrl=()=>`${this.getCoreApiUrl()}${this.transferFeeEstimateEndpoint}`,this.getAccountApiUrl=r=>`${this.getCoreApiUrl()}${this.accountEndpoint}/${r}?proof=0`,this.getAbiApiUrl=(r,t)=>`${this.getCoreApiUrl()}${this.contractAbiEndpoint}/${r}/${t}`,this.getReadOnlyFunctionCallApiUrl=(r,t,s)=>`${this.getCoreApiUrl()}${this.readOnlyFunctionCallEndpoint}/${r}/${t}/${encodeURIComponent(s)}`,this.getInfoUrl=()=>`${this.getCoreApiUrl()}/v2/info`,this.getBlockTimeInfoUrl=()=>`${this.getCoreApiUrl()}/extended/v1/info/network_block_times`,this.getPoxInfoUrl=()=>`${this.getCoreApiUrl()}/v2/pox`,this.getRewardsUrl=(r,t)=>{let s=`${this.getCoreApiUrl()}/extended/v1/burnchain/rewards/${r}`;return t&&(s=`${s}?limit=${t.limit}&offset=${t.offset}`),s},this.getRewardsTotalUrl=r=>`${this.getCoreApiUrl()}/extended/v1/burnchain/rewards/${r}/total`,this.getRewardHoldersUrl=(r,t)=>{let s=`${this.getCoreApiUrl()}/extended/v1/burnchain/reward_slot_holders/${r}`;return t&&(s=`${s}?limit=${t.limit}&offset=${t.offset}`),s},this.getStackerInfoUrl=(r,t)=>`${this.getCoreApiUrl()}${this.readOnlyFunctionCallEndpoint}
    ${r}/${t}/get-stacker-info`,!e.url&&!e.coreApiUrl)throw Error("[miro-stacks] Network initialized with no api url");this._coreApiUrl=e.url||e.coreApiUrl,this.bnsLookupUrl=e.bnsLookupUrl||e.url||e.coreApiUrl,this.fetcher=e.fetcher||common.fetchPrivate}get coreApiUrl(){return this._coreApiUrl}set coreApiUrl(e){throw new Error("Cannot modify property `coreApiUrl` after object initialization")}getNameInfo(e){const r=`${this.bnsLookupUrl}/v1/names/${e}`;return this.fetcher(r).then(t=>{if(t.status===404)throw new Error("Name not found");if(t.status!==200)throw new Error(`Bad response status: ${t.status}`);return t.json()}).then(t=>t.address?Object.assign({},t,{address:t.address}):t)}}class StacksTestnet extends StacksMainnet{constructor(e={url:HIRO_TESTNET_DEFAULT,fetcher:common.fetchPrivate}){super(e);this.version=common.TransactionVersion.Testnet,this.chainId=common.ChainID.Testnet}}class StacksMocknet extends StacksMainnet{constructor(e={url:HIRO_MOCKNET_DEFAULT,fetcher:common.fetchPrivate}){super(e);this.version=common.TransactionVersion.Testnet,this.chainId=common.ChainID.Testnet}}Object.defineProperty(exports,"ChainID",{enumerable:!0,get:function(){return common.ChainID}}),Object.defineProperty(exports,"TransactionVersion",{enumerable:!0,get:function(){return common.TransactionVersion}}),exports.HIRO_MAINNET_DEFAULT=HIRO_MAINNET_DEFAULT,exports.HIRO_MOCKNET_DEFAULT=HIRO_MOCKNET_DEFAULT,exports.HIRO_TESTNET_DEFAULT=HIRO_TESTNET_DEFAULT,exports.StacksMainnet=StacksMainnet,exports.StacksMocknet=StacksMocknet,exports.StacksTestnet=StacksTestnet;
